<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0"><channel><title>Help Wanted</title><description>Help Wanted Issues</description><link>https://lbonanomi.github.io/rss/feed.xml</link><item>	<title>Allow rendering components in the controller</title>	<link>https://github.com/github/actionview-component/issues/38</link>	<description><![CDATA[Hi @joelhawksley <br/><br/>I am happy to see a view model lib, that integrates smoothly with rails. While playing around with `ActionView::Component` i noticed that it is not possible to render components in the controller. I saw, that you are monkey patching `ActionView::Base#render`. So i tried to override the `render` method in my `ApplicationController` in a similar way, but without success.<br/><br/>At the moment users are forced to write templates with a single line: `<%= render(PostShowComponent, post: @post)
 %>`. It would be great to have an API like this:<br/><br/>```ruby <br/>class PostsController < ApplicationController<br/>  def show <br/>    post = Post.find(params[:id])
<br/>    render(PostShowComponent, post: post)
<br/>  end<br/>end<br/>```<br/>I could provide a PR with a failing feature test, if that helps. <br/><br/>Thank you , ushi<br/><br/>P.S. Found a workaround. Maybe its a good starting point:<br/><br/>```ruby<br/>class ApplicationController<br/>  private<br/><br/>  def render_component(component, args, **options)
<br/>    options = options.reverse_merge(layout: true)
<br/>    render(html: view_context.render(component, args)
, options)
<br/>  end <br/>end<br/>```<br/><br/>" ]]></description></item><item>	<title>Finish migrating to `pathtype` library.</title>	<link>https://github.com/github/semantic/issues/288</link>	<description><![CDATA[The migration to `pathtype` has been overall a pleasant one—it makes functions much more indicative of their purpose, and it’s caught some bugs (though not serious ones)
. Right now we’re an uneasy hybrid of `pathtype` solutions and `FilePath`; we should move off of the latter completely. This involves overhauling `Semantic.CLI` to use `pathtype`; the  <a href="http://hackage.haskell.org/package/pathtype-0.8.1">documentation</a> 

 provides a recipe to make `optparse-applicative` parsers do the right thing (respecting the path semantics; i.e., if we tell a parser to expect an absolute path, the parser will fail unless said path is actually absolute.)
" ]]></description></item><item>	<title>[dashboard] should be exposed via ingress</title>	<link>https://github.com/ubuntu/microk8s/issues/906</link>	<description><![CDATA[When running microk8s on the server, rather than doing port forwarding it should be possible to access the dashboard via ingress (similar to kubeflow dashboard)
" ]]></description></item><item>	<title>Improve the microk8s.status command</title>	<link>https://github.com/ubuntu/microk8s/issues/900</link>	<description><![CDATA[We would like to improve the `microk8s.status` command by offering descriptions for each addon.<br/>This comes as a follow up to the work in https://github.com/ubuntu/microk8s/pull/876 and in an effort to address issues such as https://github.com/ubuntu/microk8s/issues/869. Please review the following doc [1] and leave comments as you see fit. Thanks.<br/><br/>[1] Improve microk8s.status proposal. https://docs.google.com/document/d/12Xi3CQvLwRyIvnUOnJLC2m521quDR4Akd7ytVX0kobA/edit?usp=sharing<br/><br/>" ]]></description></item></channel></rss>
