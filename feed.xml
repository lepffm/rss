<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0"><channel><title>Help Wanted</title><description>Help Wanted Issues</description><link>https://lbonanomi.github.io/rss/feed.xml</link><item>	<title>Version 1.5.2 on Rails 6.0.1 causing deprecation warning</title>	<link>https://github.com/github/actionview-component/issues/135</link>	<description><![CDATA[Rails 6.0.1<br/>Gem version 1.5.2<br/><br/>In config/application.rb,<br/>`require \"action_view/component\"`<br/><br/>Causing: <br/>```<br/>DEPRECATION WARNING: Initialization autoloaded the constants ActionText::ContentHelper and ActionText::TagHelper.<br/><br/>Being able to do this is deprecated. Autoloading during initialization is going<br/>to be an error condition in future versions of Rails.<br/><br/>Reloading does not reboot the application, and therefore code executed during<br/>initialization does not run again. So, if you reload ActionText::ContentHelper, for example,<br/>the expected changes won't be reflected in that stale Module object.<br/><br/>These autoloaded constants have been unloaded.<br/><br/>Please, check the \"Autoloading and Reloading Constants\" guide for solutions.<br/> (called from <main> at /Users/<br/>USER/Projects/rails-app-test/config/environment.rb:5)
<br/>```<br/>at `development.log`<br/><br/>Which is highly difficult to track<br/><br/>Related issue https://github.com/rails/rails/issues/36546 " ]]></description></item><item>	<title>Finish migrating to `pathtype` library.</title>	<link>https://github.com/github/semantic/issues/288</link>	<description><![CDATA[The migration to `pathtype` has been overall a pleasant one—it makes functions much more indicative of their purpose, and it’s caught some bugs (though not serious ones)
. Right now we’re an uneasy hybrid of `pathtype` solutions and `FilePath`; we should move off of the latter completely. This involves overhauling `Semantic.CLI` to use `pathtype`; the  <a href="http://hackage.haskell.org/package/pathtype-0.8.1">documentation</a> 

 provides a recipe to make `optparse-applicative` parsers do the right thing (respecting the path semantics; i.e., if we tell a parser to expect an absolute path, the parser will fail unless said path is actually absolute.)
" ]]></description></item><item>	<title>Registry addon config</title>	<link>https://github.com/ubuntu/microk8s/issues/926</link>	<description><![CDATA[Hello, since dealing with microk8s for some time now, I would like to ask if the registry can be configured to use less than the default 20GB space. <br/>In other words, is it known the location of the predefined .yaml manifest files that start the addons?" ]]></description></item></channel></rss>
