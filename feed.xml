<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0"><channel><title>Help Wanted</title><description>Help Wanted Issues</description><link>https://lbonanomi.github.io/rss/feed.xml</link><item>	<title>Resolve compatiblity issue with better_html</title>	<link>https://github.com/github/actionview-component/issues/150</link>	<description><![CDATA[In https://github.com/github/actionview-component/pull/149, I had to add a temporary patch to prevent `better_html` from breaking on component render calls.<br/><br/>Let's revisit this patch and come up with a more robust solution.<br/><br/>cc @EiNSTeiN-" ]]></description></item><item>	<title>Allow rendering components in the controller</title>	<link>https://github.com/github/actionview-component/issues/38</link>	<description><![CDATA[Hi @joelhawksley <br/><br/>I am happy to see a view model lib, that integrates smoothly with rails. While playing around with `ActionView::Component` i noticed that it is not possible to render components in the controller. I saw, that you are monkey patching `ActionView::Base#render`. So i tried to override the `render` method in my `ApplicationController` in a similar way, but without success.<br/><br/>At the moment users are forced to write templates with a single line: `<%= render(PostShowComponent, post: @post)
 %>`. It would be great to have an API like this:<br/><br/>```ruby <br/>class PostsController < ApplicationController<br/>  def show <br/>    post = Post.find(params[:id])
<br/>    render(PostShowComponent, post: post)
<br/>  end<br/>end<br/>```<br/>I could provide a PR with a failing feature test, if that helps. <br/><br/>Thank you , ushi<br/><br/>P.S. Found a workaround. Maybe its a good starting point:<br/><br/>```ruby<br/>class ApplicationController<br/>  private<br/><br/>  def render_component(component, args, **options)
<br/>    options = options.reverse_merge(layout: true)
<br/>    render(html: view_context.render(component, args)
, options)
<br/>  end <br/>end<br/>```<br/><br/>" ]]></description></item><item>	<title>Improved user experience: choosealicense.com/appendix</title>	<link>https://github.com/github/choosealicense.com/issues/703</link>	<description><![CDATA[First, I really love this page:  <a href="https://choosealicense.com/appendix">https://choosealicense.com/appendix</a> 

<br/><br/>One way it can be improved is to include some \"yes/no/undefined\" check-boxes along the top of the table.<br/>When you eg: check the box above: \"Same License\" it brings all \"same licenses\" to the top &amp; grays out all other licenses.<br/>* If you check several boxes, only those licenses with ALL checked conditions are highlighted.<br/>* Below those (partially grayed out, or something)
 are licenses that partially match the check-boxes (in decreasing number of matches)
.<br/>* And below that too is the remaining licenses, totally grayed out.<br/><br/>That would make this page awesome to use.<br/>Thanks &amp; hope this helps." ]]></description></item><item>	<title>Test that license texts match SPDX plain license texts</title>	<link>https://github.com/github/choosealicense.com/issues/636</link>	<description><![CDATA[We should have a test that each license text in `_licenses` is the same as the plain text license in the SPDX collection to automate the requirement described at https://github.com/github/choosealicense.com/blob/gh-pages/CONTRIBUTING.md#adding-a-license<br/><br/>> The text of the license should match the corresponding text found in  <a href="https://github.com/spdx/license-list-data/blob/master/text/">spdx/license-list-data</a> 

. If there are errors there, please fix them in  <a href="https://github.com/spdx/license-list-XML">spdx/license-list-XML</a> 

 (from which the plain text version is generated)
 so as to minimize license text variation and make it easier for choosealicense.com to eventually consume license texts directly from SPDX.<br/><br/>The test could clone spdx/license-list-data and compare each license we have cataloged in this project. Many existing licenses would probably have to be marked as expected failures due to bugs in SPDX output and discrepancies in how this project has cataloged some licenses. But we should address upfront for any new license cataloged here, and continue to chip away at the existing inconsistencies." ]]></description></item><item>	<title>R support</title>	<link>https://github.com/github/semantic/issues/382</link>	<description><![CDATA[R is a  <a href="https://stackoverflow.blog/2017/10/10/impressive-growth-r/">widely used</a> 

, growing language often used in Data Science and Statistics.<br/><br/>While it does not have a published formal specification, there is a  <a href="https://cran.r-project.org/doc/manuals/r-release/R-lang.pdf">draft specification</a> 

 that describes lexing and parsing the language.<br/><br/>In the most  <a href="https://github.com/wch/r-source">widely used implementation</a> 

 the parsing is done with a bison parser defined in  <a href="https://github.com/wch/r-source/blob/ff1bca2f21aba271d428474f00494eece5c36dd3/src/main/gram.y">gram.y</a> 

.<br/><br/>The lexing rules for R are somewhat complex, but the parsing is relatively straightforward, as generally everything is an expression.<br/><br/>It would very beneficial to the R community to have support for R in semantic!" ]]></description></item><item>	<title>Kotlin support</title>	<link>https://github.com/github/semantic/issues/233</link>	<description><![CDATA[As a Kotlin user, it would be benefical if semantic support Kotlin programming language.<br/>https://kotlinlang.org/" ]]></description></item><item>	<title>Clojure(Script)
 support</title>	<link>https://github.com/github/semantic/issues/217</link>	<description><![CDATA[Any possibility of adding Clojure/ClojureScript support?" ]]></description></item><item>	<title>Dashboard list panel should store folder selection as folderUid in panel model</title>	<link>https://github.com/grafana/grafana/issues/21019</link>	<description><![CDATA[<!--<br/>Please use this template while reporting a bug and provide as much info as possible.<br/>Questions should be posted to https://community.grafana.com<br/>Use query inspector to troubleshoot issues: https://community.grafana.com/t/using-grafanas-query-inspector-to-troubleshoot-issues/2630<br/>--><br/><br/>**What happened**:<br/>Iâ€™m trying to create a dashboard only consisting out of several dashboard list panels. Each of these panels should show dashboards from a specific folder.<br/><br/>All our dashboards and folders are created using file based provisioning (yaml files for folders and json files for dashboards)
. Everything lands in the right spot.<br/><br/>Thing is that, when creating the dashboard list, the selected folder translates to a folderID in json, to identify the folder to be used in a dashboard list panel. However, during provisioning, I can only define the folderUID, which cannot be used in the dashboard list to select the folder, it seems.<br/><br/>This basically means that when I use provisioning on an empty Grafana, all dashboards and folders are loaded properly, but the dashboard using the dashboard list, does not point to the right folder.<br/>**What you expected to happen**:<br/>I would expect I can either specify the folderID in the provisioning files or be able to use the folderUID in the dashboard list panel to select a dashboard folder.<br/>**How to reproduce it (as minimally and precisely as possible)
**:<br/><br/>* provision a folder with a dashboard<br/>* create a 2nd dashboard, containing a dashboard list panel, pointing to the above created folder<br/>* export the dashboard as a json file<br/>* remove all dashboards again<br/>* reintroduce, using provisioning, the initial dashboard and folder, together with the 2nd dashboard with the dashboard panel<br/>* dashboard list will be empty <br/><br/><br/><br/>**Anything else we need to know?**:<br/><br/>**Environment**:<br/>- Grafana version: 6.4.4<br/>- Data source type &amp; version: n.a.<br/>- OS Grafana is installed on: CentOS 6.9<br/>- User OS &amp; Browser: any<br/>- Grafana plugins: n.a.<br/>- Others:<br/>" ]]></description></item><item>	<title>Make Helm Charts easier to find</title>	<link>https://github.com/grafana/loki/issues/1377</link>	<description><![CDATA[**Is your feature request related to a problem? Please describe.**<br/>Currently, it is a bit \"hard\" to find where the source code of the Chart is. The documentation leads to  <a href="https://github.com/grafana/loki/blob/master/docs/installation/helm.md">this page</a> 

 in most cases, which contains mainly general \"how to use Helm\" information rather than information about the Chart itself. For installing, it is important to know what `values` are made available for customization so I feel that making finding the Charts easier could benefit first-time users.<br/><br/>**Describe the solution you'd like**<br/>Adding links to the `loki/production/helm` folder in the installation docs.<br/><br/>Thanks!" ]]></description></item><item>	<title>Color of diff changes when scrolling up and down</title>	<link>https://github.com/grafana/tanka/issues/82</link>	<description><![CDATA[Example: https://www.youtube.com/watch?v=1UKlgCK2EeM<br/>" ]]></description></item><item>	<title>Make tanka available as kubectl plugin</title>	<link>https://github.com/grafana/tanka/issues/45</link>	<description><![CDATA[Looking at this project, I think it should be possible to make this interface with the kubectl plugins and distribute via krew.<br/>https://github.com/kubernetes-sigs/krew<br/><br/>Let me know what you think! " ]]></description></item></channel></rss>
