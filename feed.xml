<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0"><channel><title>Help Wanted</title><description>Help Wanted Issues</description><link>https://lbonanomi.github.io/rss/feed.xml</link><item>	<title>Include test case class for components</title>	<link>https://github.com/github/actionview-component/issues/109</link>	<description><![CDATA[Here is what I'm currently using on my `test_helper.rb` file.<br/><br/>```ruby<br/>class ActionView::ComponentTest < ActiveSupport::TestCase<br/>  include ActionView::Component::TestHelpers<br/>end<br/>```<br/><br/>I think it's a good idea to provide this base for class for testing components." ]]></description></item><item>	<title>Compile components on application boot</title>	<link>https://github.com/github/actionview-component/issues/100</link>	<description><![CDATA[In production, it would probably make sense to `compile` all descendents of `ActionView::Component::Base`, so that components render quickly on the first request, instead of compiling lazily as they do now." ]]></description></item><item>	<title>Any tips for rendering Components from collections?</title>	<link>https://github.com/github/actionview-component/issues/21</link>	<description><![CDATA[Before I start playing around with this, I wanted to ask if there is a preferred way, best practice, or even a helper to render components for collections  <a href="https://guides.rubyonrails.org/layouts_and_rendering.html#rendering-collections">similar to the rails guide for partials</a> 

<br/><br/>I think this would be a common use case, and would be willing to submit a PR for a documentation example." ]]></description></item><item>	<title>Clojure(Script)
 support</title>	<link>https://github.com/github/semantic/issues/217</link>	<description><![CDATA[Any possibility of adding Clojure/ClojureScript support?" ]]></description></item><item>	<title>Provisioning: Validation of valid org id is missing for datasources, dashboards, and notifiers</title>	<link>https://github.com/grafana/grafana/issues/20502</link>	<description><![CDATA[<!--<br/>Please use this template while reporting a bug and provide as much info as possible.<br/>Questions should be posted to https://community.grafana.com<br/>Use query inspector to troubleshoot issues: https://community.grafana.com/t/using-grafanas-query-inspector-to-troubleshoot-issues/2630<br/>--><br/><br/>**What happened**:<br/>Datasources provided in datasource.yml file getting inserted into the database even the orgId doesn't exist in DB <br/>**What you expected to happen**:<br/>Datasources should not be inserted into the db if org Id doesn't exist<br/>**How to reproduce it (as minimally and precisely as possible)
**:<br/>Steps to reproduce<br/>1)
 In datasource.yml file change the org Id to id doesn't exist in org Table<br/>2)
 Trigger the reload API /api/admin/provisioning/dashboards/reload<br/>3)
 check datasource table you will be seeing record with this datasource <br/><br/>**Anything else we need to know?**:<br/><br/>**Environment**:<br/>- Grafana version:<br/>- Data source type &amp; version: Postgres 11<br/>- OS Grafana is installed on: Linux<br/>- User OS &amp; Browser: Windows and Chrome<br/>- Grafana plugins:<br/>- Others:<br/>" ]]></description></item><item>	<title>Self signed certificates</title>	<link>https://github.com/grafana/grafana-image-renderer/issues/33</link>	<description><![CDATA[I tested the render plugin against a Grafana instance with self signed certificate. I got the following error:<br/>Error: net::ERR_CERT_COMMON_NAME_INVALID<br/><br/>Would be nice with a config parameter to trust unsigned certificates as that's probably the issue." ]]></description></item><item>	<title>Color of diff changes when scrolling up and down</title>	<link>https://github.com/grafana/tanka/issues/82</link>	<description><![CDATA[Example: https://www.youtube.com/watch?v=1UKlgCK2EeM<br/>" ]]></description></item><item>	<title>Make tanka available as kubectl plugin</title>	<link>https://github.com/grafana/tanka/issues/45</link>	<description><![CDATA[Looking at this project, I think it should be possible to make this interface with the kubectl plugins and distribute via krew.<br/>https://github.com/kubernetes-sigs/krew<br/><br/>Let me know what you think! " ]]></description></item></channel></rss>
