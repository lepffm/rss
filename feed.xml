<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0"><channel><title>Help Wanted</title><description>Help Wanted Issues</description><link>https://lbonanomi.github.io/rss/feed.xml</link><item>	<title>ActionView::Component::Base#format shadows Kernel#format</title>	<link>https://github.com/github/actionview-component/issues/156</link>	<description><![CDATA[This makes it confusing if you try to use Kernel#format<br/><br/>```<br/>     Failure/Error: format('%.3f', process.elapsed.to_f)
<br/><br/>     ArgumentError:<br/><br/>       wrong number of arguments (given 2, expected 0)
<br/><br/>     # ./app/components/workflow_process_row.rb:20:in `elapsed'<br/><br/>```<br/><br/>Of course you can work around by explicitly using `Kernel.format(...)
`<br/><br/><br/>" ]]></description></item><item>	<title>deprecate: dont require railtie by default</title>	<link>https://github.com/github/actionview-component/issues/154</link>	<description><![CDATA[We should remove  <a href="https://github.com/github/actionview-component/blob/master/lib/action_view/component.rb#L6">this line</a> 

 on the next major release:<br/><br/>```ruby<br/>require \"action_view/component/railtie\"<br/>```" ]]></description></item><item>	<title>Allow rendering components in the controller</title>	<link>https://github.com/github/actionview-component/issues/38</link>	<description><![CDATA[Hi @joelhawksley <br/><br/>I am happy to see a view model lib, that integrates smoothly with rails. While playing around with `ActionView::Component` i noticed that it is not possible to render components in the controller. I saw, that you are monkey patching `ActionView::Base#render`. So i tried to override the `render` method in my `ApplicationController` in a similar way, but without success.<br/><br/>At the moment users are forced to write templates with a single line: `<%= render(PostShowComponent, post: @post)
 %>`. It would be great to have an API like this:<br/><br/>```ruby <br/>class PostsController < ApplicationController<br/>  def show <br/>    post = Post.find(params[:id])
<br/>    render(PostShowComponent, post: post)
<br/>  end<br/>end<br/>```<br/>I could provide a PR with a failing feature test, if that helps. <br/><br/>Thank you , ushi<br/><br/>P.S. Found a workaround. Maybe its a good starting point:<br/><br/>```ruby<br/>class ApplicationController<br/>  private<br/><br/>  def render_component(component, args, **options)
<br/>    options = options.reverse_merge(layout: true)
<br/>    render(html: view_context.render(component, args)
, options)
<br/>  end <br/>end<br/>```<br/><br/>" ]]></description></item><item>	<title>Wanted: Experience Reports</title>	<link>https://github.com/github/actionview-component/issues/15</link>	<description><![CDATA[üëã thanks for checking out `actionview-component`!<br/><br/>In sharing this gem with the Rails community, we are looking to hear about your experiences with using `ActionView::Component` in your applications.<br/><br/>Please let us know what works well, what doesn't, and what you think is missing ‚ù§Ô∏è <br/><br/>If you'd rather provide feedback privately, feel free to contact me at joelhawksley@github.com." ]]></description></item><item>	<title>Less allocatable memory with v20191119</title>	<link>https://github.com/awslabs/amazon-eks-ami/issues/387</link>	<description><![CDATA[We're in eu-central-1 using EKS 1.14 with t3.xlarge worker nodes. After updating to AMI v20191119 the allocatable memory went down from 16132820Ki to 13461148Ki. Also the allocatable CPU went down to 3920m which is less important. Wondering what's going on here.<br/>" ]]></description></item></channel></rss>
